<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bonjour-Blog</title>
  
  <subtitle>以戒为师 以苦为师</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.ydsweb.cn/"/>
  <updated>2018-06-06T03:15:03.955Z</updated>
  <id>http://blog.ydsweb.cn/</id>
  
  <author>
    <name>BonJour</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java初学者总结的一些注意事项</title>
    <link href="http://blog.ydsweb.cn/notes/2018-06-05/javabeginner.html"/>
    <id>http://blog.ydsweb.cn/notes/2018-06-05/javabeginner.html</id>
    <published>2018-06-05T02:47:35.000Z</published>
    <updated>2018-06-06T03:15:03.955Z</updated>
    
    <content type="html"><![CDATA[<pre><code>java有三个版本： 分别为 J2SE、J2EE和J2ME    - J2SE(Java 2 Platform Standard Edition) 标准版    - J2EE(Java 2 Platform Enterprise Edition) 企业版    - J2ME(Java 2 Platform Micro Edition) 微型版注意: Java5.0版本后，J2SE、J2EE、J2ME分别更名为JavaSE、JavaEE、JavaME，由于习惯的原因，我们依然称之为J2SE、J2EE、J2ME</code></pre>  <a id="more"></a><h2 id="一、开发环境搭建"><a href="#一、开发环境搭建" class="headerlink" title="一、开发环境搭建"></a>一、开发环境搭建</h2><ul><li><p><strong>JDK下载和安装</strong> <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html" target="_blank" rel="noopener">javaSE</a></p></li><li><p><strong>环境变量的设置</strong></p><ul><li>JAVA_HOME：设为JDK的安装路径(如D:\Program Files\jdk1.7.0_71)，此路径下包括lib，bin，jre等文件夹（此变量最好设置，因为以后运行tomcat，eclipse等都需要依靠此变量）。</li><li>Path：使得系统可以在任何路径下识别java命令，设为：%JAVA_HOME%\bin。%JAVA_HOME%就是引用前面指定的JAVA_HOME变量.</li><li>CLASSPATH：Java运行环境加载类的路径，只有类在classpath中，才能被识别和加载，设为 .;%JAVA_HOME%\lib（注意前面的点号(.)，点号表示当前路径）。</li></ul></li><li><p>Eclipse安装 <a href="http://www.eclipse.org/downloads/" target="_blank" rel="noopener">Eclipse下载</a><br><em>注意：一定要设置环境变量，Eclipse 的运行依赖于这些环境变量</em></p></li></ul><h2 id="二、API-Application-Programming-Interface-应用程序编程接口-java-API文档"><a href="#二、API-Application-Programming-Interface-应用程序编程接口-java-API文档" class="headerlink" title="二、API(Application Programming Interface, 应用程序编程接口) java API文档"></a>二、API(Application Programming Interface, 应用程序编程接口) <a href="http://www.oracle.com/technetwork/java/api" target="_blank" rel="noopener">java API文档</a></h2><table><thead><tr><th>包名</th><th>说明</th></tr></thead><tbody><tr><td>java.lang</td><td>该包提供了Java编程的基础类，例如 Object、Math、String、StringBuffer、System、Thread等，不使用该包就很难编写Java代码了。</td></tr><tr><td>java.util</td><td>该包提供了包含集合框架、遗留的集合类、事件模型、日期和时间实施、国际化和各种实用工具类（字符串标记生成器、随机数生成器和位数组）。</td></tr><tr><td>java.io</td><td>该包通过文件系统、数据流和序列化提供系统的输入与输出。</td></tr><tr><td>java.net</td><td>该包提供实现网络应用与开发的类。</td></tr><tr><td>java.sql</td><td>该包提供了使用Java语言访问并处理存储在数据源（通常是一个关系型数据库）中的数据API。</td></tr><tr><td>java.awt</td><td>这两个包提供了GUI设计与开发的类。java.awt包提供了创建界面和绘制图形图像的所有类，而javax.swing包提供了一组“轻量级”的组件，尽量让这些组件在所有平台上的工作方式相同。</td></tr><tr><td>java.text</td><td>提供了与自然语言无关的方式来处理文本、日期、数字和消息的类和接口。</td></tr></tbody></table><h2 id="三、Java-import"><a href="#三、Java-import" class="headerlink" title="三、Java import"></a>三、Java import</h2><p><strong>注意：</strong></p><ul><li>import 只能导入包所包含的类，而不能导入包。</li><li>为方便起见，我们一般不导入单独的类，而是导入包下所有的类，例如 import java.util.*;。</li><li>Java 编译器默认为所有的 Java 程序导入了 JDK 的 java.lang 包中所有的类（import java.lang.*;）</li></ul><h2 id="四、Java数据类型"><a href="#四、Java数据类型" class="headerlink" title="四、Java数据类型"></a>四、Java数据类型</h2><p>Java中共有8种基本数据类型，包括4 种整型、2 种浮点型、1 种字符型、1 种布尔型，请见下表。</p><table><thead><tr><th>数据类型</th><th>说明</th><th>所占内存</th><th>例子</th><th>备注</th></tr></thead><tbody><tr><td>byte</td><td>字节型</td><td>1 byte</td><td>3, 127</td><td></td></tr><tr><td>short</td><td>短整型</td><td>2 bytes</td><td>3, 32767</td><td></td></tr><tr><td>int</td><td>整型</td><td>4 bytes</td><td>3, 21474836</td><td></td></tr><tr><td>long</td><td>长整型</td><td>8 bytes</td><td>3L, 92233720368L</td><td>long最后要有一个L字母（大小写无所谓）。</td></tr><tr><td>float</td><td>单精度浮点型</td><td>4 bytes</td><td>1.2F, 223.56F</td><td>float最后要有一个F字母（大小写无所谓）。</td></tr><tr><td>double</td><td>双精度浮点型</td><td>8 bytes</td><td>1.2, 1.2D, 223.56, 223.56D</td><td>double最后最好有一个D字母（大小写无所谓）。</td></tr><tr><td>char</td><td>字符型</td><td>2 bytes</td><td>‘a’, ‘A’</td><td>字符型数据只能是一个字符，由单引号包围</td></tr><tr><td>boolean</td><td>布尔型</td><td>1 bit</td><td>true, false</td><td>–</td></tr></tbody></table><h2 id="五、Java数据类型转换"><a href="#五、Java数据类型转换" class="headerlink" title="五、Java数据类型转换"></a>五、Java数据类型转换</h2><ul><li>自动数据类型转换<br>自动转换按从低到高的顺序转换。不同类型数据间的优先关系如下：<br>低—————————————————-&gt;高<br>byte,short,char-&gt; int -&gt; long -&gt; float -&gt; double</li><li>强制数据类型转换<br>强制转换的格式是在需要转型的数据前加上“()”，然后在括号内加入需要转化的数据类型。有的数据经过转型运算后，精度会丢失，而有的会更加精确，下面的例子可以说明这个问题。 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">double</span> y;</span><br><span class="line">        x = (<span class="keyword">int</span>)<span class="number">34.56</span> + (<span class="keyword">int</span>)<span class="number">11.2</span>;  <span class="comment">// 丢失精度</span></span><br><span class="line">        y = (<span class="keyword">double</span>)x + (<span class="keyword">double</span>)<span class="number">10</span> + <span class="number">1</span>;  <span class="comment">// 提高精度</span></span><br><span class="line">        System.out.println(<span class="string">"x="</span> + x);</span><br><span class="line">        System.out.println(<span class="string">"y="</span> + y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行结果：</span></span><br><span class="line"><span class="comment">// x=45</span></span><br><span class="line"><span class="comment">// y=56.0</span></span><br></pre></td></tr></table></figure><h2 id="六、Java数组的定义和使用"><a href="#六、Java数组的定义和使用" class="headerlink" title="六、Java数组的定义和使用"></a>六、Java数组的定义和使用</h2><ul><li>数组的定义和内存分配 <ul><li>定义数组语法：<br>  type arrayName[];<br>  type[] arrayName;</li><li>分配内存空间<br>  arrayName=new type[arraySize];</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> demoArray[];</span><br><span class="line"><span class="keyword">int</span>[] demoArray;</span><br><span class="line"></span><br><span class="line">arrayName=<span class="keyword">new</span> type[arraySize];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通常，你可以在定义的同时分配空间，语法为：</span></span><br><span class="line">type arrayName[] = <span class="keyword">new</span> type[arraySize];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;java有三个版本： 分别为 J2SE、J2EE和J2ME
    - J2SE(Java 2 Platform Standard Edition) 标准版
    - J2EE(Java 2 Platform Enterprise Edition) 企业版
    - J2ME(Java 2 Platform Micro Edition) 微型版

注意: Java5.0版本后，J2SE、J2EE、J2ME分别更名为JavaSE、JavaEE、JavaME，由于习惯的原因，我们依然称之为J2SE、J2EE、J2ME
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.ydsweb.cn/categories/notes/"/>
    
    
      <category term="java" scheme="http://blog.ydsweb.cn/tags/java/"/>
    
      <category term="skill" scheme="http://blog.ydsweb.cn/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>腾讯免费安全认证（SSL）安装(CentOS,LAMP)</title>
    <link href="http://blog.ydsweb.cn/notes/2018-06-02/ssl.html"/>
    <id>http://blog.ydsweb.cn/notes/2018-06-02/ssl.html</id>
    <published>2018-06-02T02:30:51.000Z</published>
    <updated>2018-06-02T10:49:05.760Z</updated>
    
    <content type="html"><![CDATA[<p>第一次写博客，有点小紧张，搭建博客的主要目的呢，第一是解放自己浏览器的书签栏，真的是太多啦(～￣▽￣)～；第二是总结自己在工作的小难点，方便以后回顾避免再次入坑。好了，话不多说，开始我我们今天的主题吧。<br>下面就以我的个人服务器和域名作为案例讲解，服务器（阿里云）,系统CenteOS 64位 , 域名（腾讯云），下面可能会用到Linux的命令，如果你还不会的话，可以先照着我的做，或者你自己恶补一下。</p><a id="more"></a><blockquote><p>工作前准备</p></blockquote><ul><li><strong>一台服务器（阿里云,如果你是腾讯的服务器就更好了，那样你就只需要备案一次就可以了）</strong></li><li><strong>一个域名（腾讯云购买）</strong></li><li><strong>申请SSL证书  <a href="https://buy.cloud.tencent.com/ssl" target="_blank" rel="noopener">传送门-&gt;SSL证书选购</a></strong></li></ul><p><img src="http://files.ydsweb.cn/image/ssl/%7BIG7N%5BWE5L%5B5PM5%60FH2UD%25I.png" alt="申请免费版(DV)"></p><p>这个过程需要一点时间，需要腾讯那边进行审核。不过处理还是很快的！</p><ul><li><strong>下载证书</strong></li></ul><p><img src="http://files.ydsweb.cn/image/ssl/~@U4EJC4VDTCGIF~5AE_5TF.png" alt="下载证书"></p><p>申请成功后，将你要配置的域名证书下载下来。这里我配置的是www的域名，打开文件Apache文件下，里面有是三个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1_root_bundle.crt</span><br><span class="line">2_www.ydsweb.cn.crt</span><br><span class="line">3_www.ydsweb.cn.key</span><br></pre></td></tr></table></figure></p><p>这三个文件非常重要，是我们后面配置的SSL重要关键.<br><img src="http://files.ydsweb.cn/image/ssl/K6%6051L@4QQHPZ1CQ3%5DXE%5D$H.png" alt="证书文件"></p><blockquote><p>开始服务器配置</p></blockquote><ul><li>首先购买自己的服务器，购买好之后，在<strong>镜像市场</strong>选择安装的进项，我这是安装的是<strong>LAMP环境（CentOS7.4 Apache PHP5.3～7.2）</strong> <a href="https://market.aliyun.com/products/53398003/cmjj008071.html?spm=5176.2020520132.101.11.cPSqsS" target="_blank" rel="noopener">传送门-&gt;LAMP环境</a><br>主要有功能亮点 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 基于阿里云（CentOS7.4 64位）系统源码安装，安全、稳定、高效！</span><br><span class="line">2. 源码编译安装，细节安全优化，纯命令行，占用系统资源低</span><br><span class="line">3. 支持切换至7.2、7.1、7.0、5.6、5.5、5.4、5.3版本</span><br><span class="line">4. jemalloc优化Nginx、MySQL内存管理</span><br><span class="line">5. 交互添加Nginx虚拟主机，方便快捷, 内置Let&apos;s Encrypt</span><br><span class="line">6. 菜单式FTP账号管理脚本，轻松建立ftp虚拟用户</span><br><span class="line">7. 提供在线Nginx、MySQL、PHP、Redis、Memcached、phpMyAdmin升级脚本</span><br><span class="line">8. 提供本地备份和远程备份（服务器之间rsync）、内网阿里云OSS备份功能</span><br></pre></td></tr></table></figure></li></ul><p>在这里我附带一份开发手册<a href="http://files.ydsweb.cn/CentOS%20LAMP%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8CV1.5.pdf" target="_blank" rel="noopener">CentOS LAMP镜像使用手册V1.5.pdf</a></p><p>安装完成之后，你需要完成以下几个操作，一是为了服务器的安全，二是为了方便后面有些列操作，手册中已经写了相关注意事项，我还是归类以下吧，以便我们后面步骤。</p><ul><li>修改PHP运行环境的探针 <a href="http://IP地址/tz.php" target="_blank" rel="noopener">http://IP地址/tz.php</a>, 只需要修改文件名就可以了。</li><li>修改phpmyadmin管理地址 <a href="http://IP地址/phpMyAdmin" target="_blank" rel="noopener">http://IP地址/phpMyAdmin</a> <strong>#注意大小写，为了安全建议重命名或者删除</strong></li><li>修改MySQL数据库密码 <strong>注意: 密码不为空,你需要去查看密码，创建LAMP的时候，每个的密码都不一样，当然用户名是一样的（root）</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp14x52bqj1mdtwni4zsz /]# cd root/oneinstack/</span><br><span class="line">[root@izbp14x52bqj1mdtwni4zsz oneinstack]# grep dbrootpwd options.conf </span><br><span class="line">dbrootpwd=&apos;xxxxxxxxxxx&apos;</span><br><span class="line">[root@izbp14x52bqj1mdtwni4zsz oneinstack]#</span><br></pre></td></tr></table></figure><ul><li>创建FTP账号，方便上传文件()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp14x52bqj1mdtwni4zsz /]# cd root/oneinstack/</span><br><span class="line">[root@izbp14x52bqj1mdtwni4zsz oneinstack]# ./pureftpd_vhost.sh</span><br></pre></td></tr></table></figure><p><img src="http://files.ydsweb.cn/image/ssl/YWWVFB%28O44XDS9H4NI3%5D1H7.png" alt="创建步骤"></p><ul><li>添加虚拟主机，架设我们的网站存放目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp14x52bqj1mdtwni4zsz /]# cd root/oneinstack/</span><br><span class="line">[root@izbp14x52bqj1mdtwni4zsz oneinstack]# ./vhost.sh</span><br></pre></td></tr></table></figure><blockquote><p>配置开放端口及其服务器配置</p></blockquote><ul><li><p>配置服务器入站开放的端口<br><strong>控制台 -&gt; ECS -&gt; 安全组 -&gt; 配置规则 -&gt; 配置常用端口(如: 80, 3389, 21, 443等)</strong><br><strong>注意： 443端口安全认证跳转到80端口入口，必须开启，这里提供了一份我导入的端口配置，你可以直接导入使用，<a href="http://files.ydsweb.cn/image/ssl/ecs_cn-hangzhou_sg-bp1h715qlfero6plo6vf.json" target="_blank" rel="noopener">入站端口配置文件JSON</a></strong></p></li><li><p>根据我们自己的FTP账号登录服务器，上传一份静态文件index.html</p></li></ul><p><img src="http://files.ydsweb.cn/image/ssl/%25NX8R713A%2906ESYB%5BP%7D_W%7BQ.png" alt="本地文件上传到服务器"></p><p>上传成功后，在浏览器中输入你的网址<a href="http://www.ydsweb.cn/" target="_blank" rel="noopener">http://www.ydsweb.cn/</a>，网页正常打开，说明网站现在已经部署成功了；但是，当你输入<a href="https:// www.ydsweb.cn" target="_blank" rel="noopener">https:// www.ydsweb.cn</a>你会发现打不开，为什么呢？不要着急，我们已经离成功不远啦~话不多说，我们接着往下走…</p><ul><li>使用FTP上传我们最开始下载申请的证书（SSL）文件<ul><li>首先我们在远程站点服务器上创建一个SSL文件夹</li><li>然后将我们下载下来的Apache文件下的3个文件上传到服务器。</li></ul></li></ul><p><img src="http://files.ydsweb.cn/image/ssl/Q2@O7%5DTE%5D%7DC%25C1J%25%7D@FPIDF.png" alt="本地文件上传到服务器"></p><ul><li>将上传的文件用Linux命令移动到你Apache conf文件夹下：</li></ul><p>需要注意的是：确保你的conf/httpd.conf 在你的Apache文件下面，由于我这里是切换了版本，切换至7.2最高版本了<br><strong>切换到 usr/local/apache72/conf 下面 使用mr [源文件路径] [目标路径] 将文件移动过来</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp14x52bqj1mdtwni4zsz /]# cd /usr/local/apache/conf</span><br><span class="line">[root@izbp14x52bqj1mdtwni4zsz conf]# mr /data/wwwroot/SSL /usr/local/apache/conf    #参数说明 mr [源文件路径] [目标路径]</span><br><span class="line">[root@izbp14x52bqj1mdtwni4zsz conf]# ls</span><br><span class="line">extra  httpd.conf  httpd.conf.bak  magic  mime.types  original  SSL  vhost</span><br></pre></td></tr></table></figure><p>如果你当前的文件夹下面有SSL文件夹，表示你已经成功移动过来了，那么配置就剩下最后两步就大功告成啦~</p><ul><li>配置Apache配置文件，打开conf/httpd.conf 文件</li></ul><p>找到 #LoadModule ssl_module modules/mod_ssl.so 和 #Include conf/extra/httpd-ssl.conf，去掉前面的#号注释；<br><strong>注意：查看文档里面Listen: 443 端口是否监听，如果没，请在Listen: 80 下面添加一句 Listen: 443</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp14x52bqj1mdtwni4zsz conf]# vi httpd.conf  #注释: 打开后进入不可编辑状态的模式，输入i进入编辑模式，去掉#之后，按esc键，输入wq回车，保存退出</span><br></pre></td></tr></table></figure><p>编辑apache72根目录下 conf/vhost/你的域名.conf 文件，修改如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">## 注释：建议在本地记事本上先改好，勿忘www.ydsweb.cn 换成你自己的域名 ##</span><br><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">    DocumentRoot &quot;/data/wwwroot/www.ydsweb.cn/&quot;  </span><br><span class="line">    ServerName www.ydsweb.cn</span><br><span class="line">    SSLEngine on</span><br><span class="line">    SSLCertificateFile /usr/local/apache72/conf/SSL/2_www.ydsweb.cn.crt  #注释: 记得更换路径和文件名称(主要是书序不要错了，还有就是路径不要错了！)</span><br><span class="line">    SSLCertificateKeyFile /usr/local/apache72/conf/SSL/3_www.ydsweb.cn.key</span><br><span class="line">    SSLCertificateChainFile /usr/local/apache72/conf/SSL/1_root_bundle.crt</span><br><span class="line">    &lt;!-- star --&gt;</span><br><span class="line">    &lt;Directory &quot;/data/wwwroot/www.ydsweb.cn&quot;&gt;</span><br><span class="line">      SetOutputFilter DEFLATE</span><br><span class="line">      Options FollowSymLinks ExecCGI</span><br><span class="line">      Require all granted</span><br><span class="line">      AllowOverride All</span><br><span class="line">      Order allow,deny</span><br><span class="line">      Allow from all</span><br><span class="line">      DirectoryIndex index.html index.php</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">    &lt;!-- end --&gt;</span><br><span class="line">    #注释：&lt;!-- --&gt;中间部分建议直接复制你conf/vhost/你的域名.conf里面监听80中间的那一段。在记事本中一定要记得要把我这些注释删除掉哦~</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>接下来就是将记事本的写的内容复制，然后再命令控制台中粘贴在文件内容的后面！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp14x52bqj1mdtwni4zsz conf]# vi vhost/你的域名.conf</span><br></pre></td></tr></table></figure><blockquote><p>重启Apache服务</p></blockquote><pre><code>[root@izbp14x52bqj1mdtwni4zsz conf]# service httpd restart</code></pre><p>完成所有步骤之后你就能使用https访问你的网站啦~不过因为我的服务器是在阿里云买的，所以还得在阿里云备案，不过不备案的话，只能访问到https,访问不到http协议下的网站。</p><p><strong>如果有什么疑问可以留言，我会第一时间回复你~</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次写博客，有点小紧张，搭建博客的主要目的呢，第一是解放自己浏览器的书签栏，真的是太多啦(～￣▽￣)～；第二是总结自己在工作的小难点，方便以后回顾避免再次入坑。好了，话不多说，开始我我们今天的主题吧。&lt;br&gt;下面就以我的个人服务器和域名作为案例讲解，服务器（阿里云）,系统CenteOS 64位 , 域名（腾讯云），下面可能会用到Linux的命令，如果你还不会的话，可以先照着我的做，或者你自己恶补一下。&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.ydsweb.cn/categories/notes/"/>
    
    
      <category term="skill" scheme="http://blog.ydsweb.cn/tags/skill/"/>
    
      <category term="liunx" scheme="http://blog.ydsweb.cn/tags/liunx/"/>
    
      <category term="LAMP" scheme="http://blog.ydsweb.cn/tags/LAMP/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.ydsweb.cn/life/2018-06-01/hello-world.html"/>
    <id>http://blog.ydsweb.cn/life/2018-06-01/hello-world.html</id>
    <published>2018-06-01T15:40:03.000Z</published>
    <updated>2018-06-02T02:17:41.595Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://blog.ydsweb.cn/categories/life/"/>
    
    
      <category term="life" scheme="http://blog.ydsweb.cn/tags/life/"/>
    
      <category term="hexo" scheme="http://blog.ydsweb.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
